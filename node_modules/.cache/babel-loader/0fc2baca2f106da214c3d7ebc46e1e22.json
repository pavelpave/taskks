{"ast":null,"code":"import _objectSpread from \"/home/garpix/task_react_App/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/garpix/task_react_App/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './ui/index';\nimport api from './ui/api_Task/';\nimport dispath from './state/rerender';\nconst apiTodo = api.todo;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.state;\n    this.axioTaskList = this.axioTaskList.bind(this);\n    this.renderArrTask = this.renderArrTask.bind(this);\n    this.rerenderThree = props.rerenderThree;\n  }\n\n  axioTaskList() {\n    apiTodo.getTasks({}, response => {\n      let mass = [];\n      let data = response.data; // this.renderArrTask(response.data.results)  \n\n      debugger;\n\n      for (let i = 0; i < data.results.length; i++) {\n        if (data.results[i].owner_object.id === this.state.owner_object.id) {\n          mass.push(data.results[i]);\n        } // this.state.buttonCliked[this.data.results[i].id] = null\n\n      } // this.state['opisTask'] = data.results\n\n\n      this.setState(this.state.opisTask = data.results);\n    });\n  }\n\n  renderArrTask(data) {\n    // let newstate = {...this.state};\n    let opisTask = this.state.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if (newtask.id === oldtask.id) {\n          console.log(oldtask, 'oldtask');\n          console.log(newtask, 'newtask');\n          return _objectSpread({}, newtask);\n        }\n\n        return oldtask;\n      });\n    }); // this.state.opisTask = opisTask;\n\n    console.log(this.state.opisTask); // debugger\n    // this.setState(this.state.opisTask = opisTask);\n\n    dispath({\n      type: 'RERENDER_THREE',\n      contextState: this.state.opisTask,\n      fun: this.rerenderThree\n    });\n  }\n\n  componentDidMount() {\n    this.axioTaskList();\n  }\n\n  render() {\n    return React.createElement(Table, {\n      state: this.state,\n      rerenderTask: this.renderArrTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/App.js"],"names":["React","Component","Table","api","dispath","apiTodo","todo","App","constructor","props","state","axioTaskList","bind","renderArrTask","rerenderThree","getTasks","response","mass","data","i","results","length","owner_object","id","push","setState","opisTask","map","newtask","oldtask","console","log","type","contextState","fun","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAGF,GAAG,CAACG,IAApB;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,aAAL,GAAqBL,KAAK,CAACK,aAA3B;AACD;;AACDH,EAAAA,YAAY,GAAG;AACbN,IAAAA,OAAO,CAACU,QAAR,CAAiB,EAAjB,EAAqBC,QAAQ,IAAI;AAC/B,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,IAAI,GAAGF,QAAQ,CAACE,IAApB,CAF+B,CAG/B;;AACA;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,OAAL,CAAaC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC5C,YAAID,IAAI,CAACE,OAAL,CAAaD,CAAb,EAAgBG,YAAhB,CAA6BC,EAA7B,KAAoC,KAAKb,KAAL,CAAWY,YAAX,CAAwBC,EAAhE,EAAoE;AAClEN,UAAAA,IAAI,CAACO,IAAL,CAAUN,IAAI,CAACE,OAAL,CAAaD,CAAb,CAAV;AACD,SAH2C,CAI5C;;AAED,OAX8B,CAY/B;;;AAGA,WAAKM,QAAL,CAAc,KAAKf,KAAL,CAAWgB,QAAX,GAAqBR,IAAI,CAACE,OAAxC;AACD,KAhBD;AAkBD;;AACDP,EAAAA,aAAa,CAACK,IAAD,EAAO;AAClB;AACA,QAAIQ,QAAQ,GAAG,KAAKhB,KAAL,CAAWgB,QAA1B;AACAR,IAAAA,IAAI,CAACS,GAAL,CAASC,OAAO,IAAI;AAClBF,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,GAAT,CAAaE,OAAO,IAAI;AACjC,YAAID,OAAO,CAACL,EAAR,KAAeM,OAAO,CAACN,EAA3B,EAA+B;AAC7BO,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,SAArB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,SAArB;AAEA,mCAAYA,OAAZ;AACD;;AACD,eAAOC,OAAP;AACD,OARU,CAAX;AASD,KAVD,EAHkB,CAclB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWgB,QAAvB,EAfkB,CAgBlB;AACA;;AACAtB,IAAAA,OAAO,CAAC;AACN4B,MAAAA,IAAI,EAAE,gBADA;AAENC,MAAAA,YAAY,EAAE,KAAKvB,KAAL,CAAWgB,QAFnB;AAGNQ,MAAAA,GAAG,EAAC,KAAKpB;AAHH,KAAD,CAAP;AAKD;;AAEDqB,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,YAAL;AACD;;AACDyB,EAAAA,MAAM,GAAG;AAEP,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAK1B,KAAnB;AAA0B,MAAA,YAAY,EAAE,KAAKG,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA7DyB;;AAgE5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from './ui/index'\nimport api from './ui/api_Task/'\nimport dispath from './state/rerender'\nconst apiTodo = api.todo\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = props.state\n    this.axioTaskList = this.axioTaskList.bind(this)\n    this.renderArrTask = this.renderArrTask.bind(this)\n    this.rerenderThree = props.rerenderThree\n  }\n  axioTaskList() {\n    apiTodo.getTasks({}, response => {\n      let mass = []\n      let data = response.data;\n      // this.renderArrTask(response.data.results)  \n      debugger\n      for (let i = 0; i < data.results.length; i++) {\n        if (data.results[i].owner_object.id === this.state.owner_object.id) {\n          mass.push(data.results[i])\n        }\n        // this.state.buttonCliked[this.data.results[i].id] = null\n\n      }\n      // this.state['opisTask'] = data.results\n\n\n      this.setState(this.state.opisTask= data.results)\n    })\n\n  }\n  renderArrTask(data) {\n    // let newstate = {...this.state};\n    let opisTask = this.state.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if (newtask.id === oldtask.id) {\n          console.log(oldtask, 'oldtask')\n          console.log(newtask, 'newtask')\n\n          return { ...newtask };\n        }\n        return oldtask;\n      })\n    });\n    // this.state.opisTask = opisTask;\n    console.log(this.state.opisTask);\n    // debugger\n    // this.setState(this.state.opisTask = opisTask);\n    dispath({\n      type: 'RERENDER_THREE',\n      contextState: this.state.opisTask,\n      fun:this.rerenderThree \n    })\n  }\n\n  componentDidMount() {\n    this.axioTaskList()\n  }\n  render() {\n\n    return (\n      <Table state={this.state} rerenderTask={this.renderArrTask} />\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}