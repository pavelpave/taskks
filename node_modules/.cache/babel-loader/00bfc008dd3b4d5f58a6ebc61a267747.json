{"ast":null,"code":"/*!\n * object.omit <https://github.com/jonschlinkert/object.omit>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n'use strict';\n\nvar isObject = require('is-extendable');\n\nvar forOwn = require('for-own');\n\nmodule.exports = function omit(obj, keys) {\n  if (!isObject(obj)) return {};\n  keys = [].concat.apply([], [].slice.call(arguments, 1));\n  var last = keys[keys.length - 1];\n  var res = {},\n      fn;\n\n  if (typeof last === 'function') {\n    fn = keys.pop();\n  }\n\n  var isFunction = typeof fn === 'function';\n\n  if (!keys.length && !isFunction) {\n    return obj;\n  }\n\n  forOwn(obj, function (value, key) {\n    if (keys.indexOf(key) === -1) {\n      if (!isFunction) {\n        res[key] = value;\n      } else if (fn(value, key, obj)) {\n        res[key] = value;\n      }\n    }\n  });\n  return res;\n};","map":null,"metadata":{},"sourceType":"script"}