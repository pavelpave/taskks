{"ast":null,"code":"import _objectSpread from \"/home/garpix/task_react_App/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as axios from 'axios';\nimport React, { Component } from 'react'; // import state from '../state/state'\n\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\nexport default class axioPost extends Component {\n  constructor(el, urlProps, state) {\n    super(el, urlProps, state);\n    this.state = state;\n    this.el = el;\n    this.urlProps = urlProps;\n    this.axioRequests = this.axioRequests.bind(this);\n  }\n\n  axioRequests() {\n    console.log(this.setState);\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    };\n    axios.post(\"\".concat(urlBase, \"task/\").concat(this.el).concat(this.urlProps), {}, {\n      headers\n    }).then(response => {\n      console.log(this.setState);\n\n      let newstate = _objectSpread({}, this.state);\n\n      console.log(response.data);\n      response.data.map(newtask => {\n        newstate.opisTask.map(oldtask => {\n          if (newtask.id === oldtask.id) {\n            return newtask;\n          }\n\n          return oldtask;\n        });\n      });\n      this.setState(newstate);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/ui/axioButton.js"],"names":["axios","React","Component","urlBase","axioPost","constructor","el","urlProps","state","axioRequests","bind","console","log","setState","headers","post","then","response","newstate","data","map","newtask","opisTask","oldtask","id","catch","error","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,MAAMC,OAAO,GAAG,6DAAhB;AAGA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC9CG,EAAAA,WAAW,CAACC,EAAD,EAAKC,QAAL,EAAeC,KAAf,EAAsB;AAC/B,UAAMF,EAAN,EAAUC,QAAV,EAAoBC,KAApB;AACA,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDD,EAAAA,YAAY,GAAG;AACbE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAjB;AAEA,UAAMC,OAAO,GAAG;AACd,uBAAiB;AADH,KAAhB;AAGAd,IAAAA,KAAK,CAACe,IAAN,WAAcZ,OAAd,kBAA6B,KAAKG,EAAlC,SAAuC,KAAKC,QAA5C,GAAwD,EAAxD,EAA4D;AAAEO,MAAAA;AAAF,KAA5D,EACGE,IADH,CACSC,QAAD,IAAc;AAClBN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAjB;;AACA,UAAIK,QAAQ,qBAAO,KAAKV,KAAZ,CAAZ;;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAQ,CAACE,IAArB;AACAF,MAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,OAAO,IAAI;AAC3BH,QAAAA,QAAQ,CAACI,QAAT,CAAkBF,GAAlB,CAAsBG,OAAO,IAAI;AAC/B,cAAGF,OAAO,CAACG,EAAR,KAAeD,OAAO,CAACC,EAA1B,EAA8B;AAC5B,mBAAOH,OAAP;AACD;;AACD,iBAAOE,OAAP;AACD,SALD;AAMD,OAPD;AASA,WAAKV,QAAL,CAAcK,QAAd;AACD,KAfH,EAgBGO,KAhBH,CAgBUC,KAAD,IAAW;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD,KAlBH;AAmBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,yCADF;AAID;;AAxC6C","sourcesContent":["import * as axios from 'axios';\nimport React, { Component } from 'react'\n// import state from '../state/state'\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\n\n\nexport default class axioPost extends Component {\n  constructor(el, urlProps, state) {\n    super(el, urlProps, state)\n    this.state = state\n    this.el = el\n    this.urlProps = urlProps\n    this.axioRequests = this.axioRequests.bind(this)\n  }\n  axioRequests() {\n    console.log(this.setState);\n\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    }\n    axios.post(`${urlBase}task/${this.el}${this.urlProps}`, {}, { headers })\n      .then((response) => {\n        console.log(this.setState);\n        let newstate = {...this.state};\n        console.log(response.data)\n        response.data.map(newtask => {\n          newstate.opisTask.map(oldtask => {\n            if(newtask.id === oldtask.id) {\n              return newtask;\n            }\n            return oldtask\n          })\n        });\n   \n        this.setState(newstate);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <>\n      </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}