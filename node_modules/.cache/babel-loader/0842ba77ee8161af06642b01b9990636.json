{"ast":null,"code":"'use strict';\n\nvar chars = {},\n    unesc,\n    temp;\n\nfunction reverse(object, prepender) {\n  return Object.keys(object).reduce(function (reversed, key) {\n    var newKey = prepender ? prepender + key : key; // Optionally prepend a string to key.\n\n    reversed[object[key]] = newKey; // Swap key and value.\n\n    return reversed; // Return the result.\n  }, {});\n}\n/**\n * Regex for common characters\n */\n\n\nchars.escapeRegex = {\n  '?': /\\?/g,\n  '@': /\\@/g,\n  '!': /\\!/g,\n  '+': /\\+/g,\n  '*': /\\*/g,\n  '(': /\\(/g,\n  ')': /\\)/g,\n  '[': /\\[/g,\n  ']': /\\]/g\n};\n/**\n * Escape characters\n */\n\nchars.ESC = {\n  '?': '__UNESC_QMRK__',\n  '@': '__UNESC_AMPE__',\n  '!': '__UNESC_EXCL__',\n  '+': '__UNESC_PLUS__',\n  '*': '__UNESC_STAR__',\n  ',': '__UNESC_COMMA__',\n  '(': '__UNESC_LTPAREN__',\n  ')': '__UNESC_RTPAREN__',\n  '[': '__UNESC_LTBRACK__',\n  ']': '__UNESC_RTBRACK__'\n};\n/**\n * Unescape characters\n */\n\nchars.UNESC = unesc || (unesc = reverse(chars.ESC, '\\\\'));\nchars.ESC_TEMP = {\n  '?': '__TEMP_QMRK__',\n  '@': '__TEMP_AMPE__',\n  '!': '__TEMP_EXCL__',\n  '*': '__TEMP_STAR__',\n  '+': '__TEMP_PLUS__',\n  ',': '__TEMP_COMMA__',\n  '(': '__TEMP_LTPAREN__',\n  ')': '__TEMP_RTPAREN__',\n  '[': '__TEMP_LTBRACK__',\n  ']': '__TEMP_RTBRACK__'\n};\nchars.TEMP = temp || (temp = reverse(chars.ESC_TEMP));\nmodule.exports = chars;","map":null,"metadata":{},"sourceType":"script"}