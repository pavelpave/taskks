{"ast":null,"code":"import * as axios from 'axios'; // import state from '../state/state'\n\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\nexport default class axioPost {\n  constructor(el, urlProps, state) {\n    this.state = state;\n    this.el = el;\n    this.urlProps = urlProps;\n  }\n\n  axioRequests() {\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    };\n    axios.post(\"\".concat(urlBase, \"task/\").concat(this.el).concat(this.urlProps), {}, {\n      headers\n    }).then(response => {\n      console.log(response.data);\n      this.state.opisTask.map((el, i) => {\n        if (this.state.opisTask[i].id === response.data[0].id) {\n          this.state.opisTask[i] = response.data[0];\n        } // else if(this.state.opisTask[i].id === response.data[1].id){\n        //   this.state.opisTask[i] = response.data[1]\n        // }\n\n\n        console.log(this.state);\n        this.setState(this.state);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/ui/axioButton.js"],"names":["axios","urlBase","axioPost","constructor","el","urlProps","state","axioRequests","headers","post","then","response","console","log","data","opisTask","map","i","id","setState","catch","error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAwB,OAAxB,C,CACA;;AACA,MAAMC,OAAO,GAAG,6DAAhB;AAGA,eAAe,MAAMC,QAAN,CAAc;AACzBC,EAAAA,WAAW,CAACC,EAAD,EAAMC,QAAN,EAAiBC,KAAjB,EAAwB;AAChC,SAAKA,KAAL,GAAaA,KAAb;AACC,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACDE,EAAAA,YAAY,GAAE;AAEV,UAAMC,OAAO,GAAG;AACZ,uBAAiB;AADL,KAAhB;AAGAR,IAAAA,KAAK,CAACS,IAAN,WAAcR,OAAd,kBAA6B,KAAKG,EAAlC,SAAuC,KAAKC,QAA5C,GAAwD,EAAxD,EAA4D;AAACG,MAAAA;AAAD,KAA5D,EACGE,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACC,WAAKR,KAAL,CAAWS,QAAX,CAAoBC,GAApB,CAAwB,CAACZ,EAAD,EAAIa,CAAJ,KAAS;AAE9B,YAAG,KAAKX,KAAL,CAAWS,QAAX,CAAoBE,CAApB,EAAuBC,EAAvB,KAA8BP,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBI,EAAlD,EAAqD;AACnD,eAAKZ,KAAL,CAAWS,QAAX,CAAoBE,CAApB,IAAyBN,QAAQ,CAACG,IAAT,CAAc,CAAd,CAAzB;AACD,SAJ6B,CAK9B;AACA;AACA;;;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAa,KAAKP,KAAlB;AACA,aAAKa,QAAL,CAAc,KAAKb,KAAnB;AACF,OAVD;AAYF,KAfH,EAgBGc,KAhBH,CAgBUC,KAAD,IAAW;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,KAlBH;AAmBH;;AA9BwB","sourcesContent":["import * as axios  from 'axios';\n// import state from '../state/state'\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\n\n\nexport default class axioPost{\n    constructor(el , urlProps , state) {\n       this.state = state\n        this.el = el\n        this.urlProps = urlProps\n    }\n    axioRequests(){\n       \n        const headers = {\n            'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n        }\n        axios.post(`${urlBase}task/${this.el}${this.urlProps}`, {}, {headers})\n          .then((response) => {\n            console.log(response.data)\n             this.state.opisTask.map((el,i) =>{\n                \n                if(this.state.opisTask[i].id === response.data[0].id){\n                  this.state.opisTask[i] = response.data[0]\n                }\n                // else if(this.state.opisTask[i].id === response.data[1].id){\n                //   this.state.opisTask[i] = response.data[1]\n                // }\n                console.log( this.state);\n                this.setState(this.state)\n             })\n\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}