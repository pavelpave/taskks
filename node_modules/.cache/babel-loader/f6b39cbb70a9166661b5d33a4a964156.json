{"ast":null,"code":"import _objectSpread from \"/home/garpix/task_react_App/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/garpix/task_react_App/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './ui/index';\nimport api from './ui/api_Task/';\nimport dispath from './state/rerender';\nconst apiTodo = api.todo;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.state;\n    this.axioTaskList = this.axioTaskList.bind(this);\n    this.renderArrTask = this.renderArrTask.bind(this);\n    this.rerenderThree = props.rerenderThree;\n  }\n\n  setStateMy(prevState, newState) {\n    console.log('chek');\n    this.setState(prevState = newState);\n  }\n\n  axioTaskList() {\n    apiTodo.getTasks({}, response => {\n      let mass = [];\n      let data = response.data;\n\n      for (let i = 0; i < data.results.length; i++) {\n        if (data.results[i].owner_object.id === this.state.owner_object.id) {\n          mass.push(data.results[i]);\n        } // this.state.buttonCliked[this.data.results[i].id] = null\n\n      }\n\n      this.setState(this.state.opisTask = data.results);\n    });\n  }\n\n  renderArrTask(data) {\n    // let newstate = {...this.state};\n    let opisTask = this.state.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if (newtask.id === oldtask.id) {\n          console.log(oldtask, 'oldtask');\n          console.log(newtask, 'newtask');\n          return _objectSpread({}, newtask);\n        }\n\n        return oldtask;\n      });\n    });\n    console.log(this.state.opisTask);\n    this.setStateMy(this.state.opisTask, opisTask);\n  }\n\n  componentDidMount() {\n    this.axioTaskList();\n  }\n\n  render() {\n    return React.createElement(Table, {\n      state: this.state,\n      rerenderTask: this.renderArrTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/App.js"],"names":["React","Component","Table","api","dispath","apiTodo","todo","App","constructor","props","state","axioTaskList","bind","renderArrTask","rerenderThree","setStateMy","prevState","newState","console","log","setState","getTasks","response","mass","data","i","results","length","owner_object","id","push","opisTask","map","newtask","oldtask","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAGF,GAAG,CAACG,IAApB;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AAEA,SAAKE,aAAL,GAAqBL,KAAK,CAACK,aAA3B;AACD;;AACDC,EAAAA,UAAU,CAACC,SAAD,EAAaC,QAAb,EAAsB;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,SAAKC,QAAL,CAAcJ,SAAS,GAAGC,QAA1B;AACD;;AACDN,EAAAA,YAAY,GAAG;AACbN,IAAAA,OAAO,CAACgB,QAAR,CAAiB,EAAjB,EAAqBC,QAAQ,IAAI;AAC/B,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,IAAI,GAAGF,QAAQ,CAACE,IAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,OAAL,CAAaC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC5C,YAAID,IAAI,CAACE,OAAL,CAAaD,CAAb,EAAgBG,YAAhB,CAA6BC,EAA7B,KAAoC,KAAKnB,KAAL,CAAWkB,YAAX,CAAwBC,EAAhE,EAAoE;AAClEN,UAAAA,IAAI,CAACO,IAAL,CAAUN,IAAI,CAACE,OAAL,CAAaD,CAAb,CAAV;AACD,SAH2C,CAI5C;;AAED;;AACD,WAAKL,QAAL,CAAc,KAAKV,KAAL,CAAWqB,QAAX,GAAqBP,IAAI,CAACE,OAAxC;AACD,KAXD;AAaD;;AACDb,EAAAA,aAAa,CAACW,IAAD,EAAO;AAClB;AACA,QAAIO,QAAQ,GAAG,KAAKrB,KAAL,CAAWqB,QAA1B;AACAP,IAAAA,IAAI,CAACQ,GAAL,CAASC,OAAO,IAAI;AAClBF,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,GAAT,CAAaE,OAAO,IAAI;AACjC,YAAID,OAAO,CAACJ,EAAR,KAAeK,OAAO,CAACL,EAA3B,EAA+B;AAC7BX,UAAAA,OAAO,CAACC,GAAR,CAAYe,OAAZ,EAAqB,SAArB;AACAhB,UAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ,EAAqB,SAArB;AAEA,mCAAYA,OAAZ;AACD;;AACD,eAAOC,OAAP;AACD,OARU,CAAX;AASD,KAVD;AAYAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWqB,QAAvB;AAEA,SAAKhB,UAAL,CAAgB,KAAKL,KAAL,CAAWqB,QAA3B,EAAsCA,QAAtC;AAED;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,YAAL;AACD;;AACDyB,EAAAA,MAAM,GAAG;AAEP,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAK1B,KAAnB;AAA0B,MAAA,YAAY,EAAE,KAAKG,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA1DyB;;AA6D5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from './ui/index'\nimport api from './ui/api_Task/'\nimport dispath from './state/rerender'\nconst apiTodo = api.todo\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = props.state\n    this.axioTaskList = this.axioTaskList.bind(this)\n    this.renderArrTask = this.renderArrTask.bind(this)\n    \n    this.rerenderThree = props.rerenderThree\n  }\n  setStateMy(prevState , newState){\n    console.log('chek');\n    \n    this.setState(prevState = newState)\n  }\n  axioTaskList() {\n    apiTodo.getTasks({}, response => {\n      let mass = []\n      let data = response.data;     \n      for (let i = 0; i < data.results.length; i++) {\n        if (data.results[i].owner_object.id === this.state.owner_object.id) {\n          mass.push(data.results[i])\n        }\n        // this.state.buttonCliked[this.data.results[i].id] = null\n\n      }\n      this.setState(this.state.opisTask= data.results)\n    })\n\n  }\n  renderArrTask(data) {\n    // let newstate = {...this.state};\n    let opisTask = this.state.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if (newtask.id === oldtask.id) {\n          console.log(oldtask, 'oldtask')\n          console.log(newtask, 'newtask')\n\n          return { ...newtask };\n        }\n        return oldtask;\n      })\n    });\n    \n    console.log(this.state.opisTask);\n  \n    this.setStateMy(this.state.opisTask , opisTask);\n    \n  }\n\n  componentDidMount() {\n    this.axioTaskList()\n  }\n  render() {\n\n    return (\n      <Table state={this.state} rerenderTask={this.renderArrTask} />\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}