{"ast":null,"code":"var wrap = require('./wrap'),\n    dir = require('./keys'),\n    str = require('./str'),\n    is = require('./is');\n\nmodule.exports = function key(k, v) {\n  var set = arguments.length > 1,\n      keys = is.fn(k) ? [] : str(k).split('.').filter(Boolean),\n      root = keys.shift();\n  return function deep(o, i) {\n    var masked = {};\n    return !o ? undefined : !is.num(k) && !k ? set ? replace(o, v) : o : is.arr(k) ? (k.map(copy), masked) : o[k] || !keys.length ? set ? (o[k] = is.fn(v) ? v(o[k], i) : v, o) : is.fn(k) ? k(o) : o[k] : set ? (key(keys.join('.'), v)(o[root] ? o[root] : o[root] = {}), o) : key(keys.join('.'))(o[root]);\n\n    function copy(k) {\n      var val = key(k)(o);\n      val = is.fn(v) ? v(val) : val == undefined ? v : val;\n      if (val != undefined) key(k, is.fn(val) ? wrap(val) : val)(masked);\n    }\n\n    function replace(o, v) {\n      dir(o).map(function (k) {\n        delete o[k];\n      });\n      dir(v).map(function (k) {\n        o[k] = v[k];\n      });\n      return o;\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}