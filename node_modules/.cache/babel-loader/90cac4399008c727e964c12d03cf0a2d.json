{"ast":null,"code":"/**\r\n * Archiver Vending\r\n *\r\n * @ignore\r\n * @license [MIT]{@link https://github.com/archiverjs/node-archiver/blob/master/LICENSE}\r\n * @copyright (c) 2012-2014 Chris Talkington, contributors.\r\n */\nvar Archiver = require('./lib/core');\n\nvar formats = {};\n/**\r\n * Dispenses a new Archiver instance.\r\n *\r\n * @constructor\r\n * @param  {String} format The archive format to use.\r\n * @param  {Object} options See [Archiver]{@link Archiver}\r\n * @return {Archiver}\r\n */\n\nvar vending = function vending(format, options) {\n  return vending.create(format, options);\n};\n/**\r\n * Creates a new Archiver instance.\r\n *\r\n * @param  {String} format The archive format to use.\r\n * @param  {Object} options See [Archiver]{@link Archiver}\r\n * @return {Archiver}\r\n */\n\n\nvending.create = function (format, options) {\n  if (formats[format]) {\n    var instance = new Archiver(format, options);\n    instance.setFormat(format);\n    instance.setModule(new formats[format](options));\n    return instance;\n  } else {\n    throw new Error('create(' + format + '): format not registered');\n  }\n};\n/**\r\n * Registers a format for use with archiver.\r\n *\r\n * @param  {String} format The name of the format.\r\n * @param  {Function} module The function for archiver to interact with.\r\n * @return void\r\n */\n\n\nvending.registerFormat = function (format, module) {\n  if (formats[format]) {\n    throw new Error('register(' + format + '): format already registered');\n  }\n\n  if (typeof module !== 'function') {\n    throw new Error('register(' + format + '): format module invalid');\n  }\n\n  if (typeof module.prototype.append !== 'function' || typeof module.prototype.finalize !== 'function') {\n    throw new Error('register(' + format + '): format module missing methods');\n  }\n\n  formats[format] = module;\n};\n\nvending.registerFormat('zip', require('./lib/plugins/zip'));\nvending.registerFormat('tar', require('./lib/plugins/tar'));\nvending.registerFormat('json', require('./lib/plugins/json'));\nmodule.exports = vending;","map":null,"metadata":{},"sourceType":"script"}