{"ast":null,"code":"/**\r\n * node-crc32-stream\r\n *\r\n * Copyright (c) 2014 Chris Talkington, contributors.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/node-crc32-stream/blob/master/LICENSE-MIT\r\n */\nvar inherits = require('util').inherits;\n\nvar Transform = require('readable-stream').Transform;\n\nvar crc32 = require('crc').crc32;\n\nvar CRC32Stream = module.exports = function CRC32Stream(options) {\n  Transform.call(this, options);\n  this.checksum = new Buffer(4);\n  this.checksum.writeInt32BE(0, 0);\n  this.rawSize = 0;\n};\n\ninherits(CRC32Stream, Transform);\n\nCRC32Stream.prototype._transform = function (chunk, encoding, callback) {\n  if (chunk) {\n    this.checksum = crc32(chunk, this.checksum);\n    this.rawSize += chunk.length;\n  }\n\n  callback(null, chunk);\n};\n\nCRC32Stream.prototype.digest = function (encoding) {\n  var checksum = new Buffer(4);\n  checksum.writeUInt32BE(this.checksum >>> 0, 0);\n  return encoding ? checksum.toString(encoding) : checksum;\n};\n\nCRC32Stream.prototype.hex = function () {\n  return this.digest('hex').toUpperCase();\n};\n\nCRC32Stream.prototype.size = function () {\n  return this.rawSize;\n};","map":null,"metadata":{},"sourceType":"script"}