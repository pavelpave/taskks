{"ast":null,"code":"import _objectSpread from \"/home/garpix/task_react_App/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/garpix/task_react_App/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './ui/index';\nimport api from './ui/api_Task/';\nconst apiTodo = api.todo;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.state;\n    this.axioTaskList = this.axioTaskList.bind(this);\n    this.renderArrTask = this.renderArrTask.bind(this);\n    this.dispath = props.dispath;\n  }\n\n  axioTaskList() {\n    apiTodo.getTasks({}, response => {// this.renderArrTask(response.data.results)  \n    });\n  }\n\n  renderArrTask(data) {\n    // let newstate = {...this.state};\n    let opisTask = this.state.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if (newtask.id === oldtask.id) {\n          console.log(oldtask, 'oldtask');\n          console.log(newtask, 'newtask');\n          return _objectSpread({}, newtask);\n        }\n\n        return oldtask;\n      });\n    });\n    this.state.opisTask = opisTask;\n    console.log(this.state.opisTask);\n    debugger; // this.setState(this.state.opisTask);\n\n    this.dispath({\n      type: 'RERENDER_THREE',\n      contextState: this.state.opisTask\n    });\n  }\n\n  componentDidMount() {\n    this.axioTaskList();\n  }\n\n  render() {\n    return React.createElement(Table, {\n      state: this.state,\n      rerenderTask: this.renderArrTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/App.js"],"names":["React","Component","Table","api","apiTodo","todo","App","constructor","props","state","axioTaskList","bind","renderArrTask","dispath","getTasks","response","data","opisTask","map","newtask","oldtask","id","console","log","type","contextState","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,MAAMC,OAAO,GAAGD,GAAG,CAACE,IAApB;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAoB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAApB;AACA,SAAKE,OAAL,GAAeL,KAAK,CAACK,OAArB;AACD;;AACDH,EAAAA,YAAY,GAAG;AACbN,IAAAA,OAAO,CAACU,QAAR,CAAiB,EAAjB,EAAqBC,QAAQ,IAAI,CAC7B;AAEL,KAHC;AAKD;;AACDH,EAAAA,aAAa,CAACI,IAAD,EAAM;AACjB;AACA,QAAIC,QAAQ,GAAG,KAAKR,KAAL,CAAWQ,QAA1B;AACAD,IAAAA,IAAI,CAACE,GAAL,CAASC,OAAO,IAAI;AAClBF,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,GAAT,CAAaE,OAAO,IAAI;AACjC,YAAGD,OAAO,CAACE,EAAR,KAAeD,OAAO,CAACC,EAA1B,EAA8B;AAC5BC,UAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,SAArB;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqB,SAArB;AAEA,mCAAWA,OAAX;AACD;;AACD,eAAOC,OAAP;AACD,OARU,CAAX;AASD,KAVD;AAWA,SAAKX,KAAL,CAAWQ,QAAX,GAAsBA,QAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWQ,QAAvB;AACA,aAhBiB,CAiBjB;;AACA,SAAKJ,OAAL,CAAa;AACXW,MAAAA,IAAI,EAAC,gBADM;AAEXC,MAAAA,YAAY,EAAC,KAAKhB,KAAL,CAAWQ;AAFb,KAAb;AAID;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,YAAL;AACD;;AACDiB,EAAAA,MAAM,GAAG;AAEP,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKlB,KAAnB;AAA0B,MAAA,YAAY,EAAE,KAAKG,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA/CyB;;AAkD5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from './ui/index'\nimport api from './ui/api_Task/'\nconst apiTodo = api.todo\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = props.state\n    this.axioTaskList = this.axioTaskList.bind(this)\n    this.renderArrTask= this.renderArrTask.bind(this)\n    this.dispath = props.dispath\n  }\n  axioTaskList() {\n    apiTodo.getTasks({}, response => {      \n        // this.renderArrTask(response.data.results)  \n         \n  })\n    \n  }\n  renderArrTask(data){\n    // let newstate = {...this.state};\n    let opisTask = this.state.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if(newtask.id === oldtask.id) {\n          console.log(oldtask, 'oldtask')\n          console.log(newtask, 'newtask')\n        \n          return {...newtask};\n        }\n        return oldtask;\n      })\n    });\n    this.state.opisTask = opisTask;\n    console.log(this.state.opisTask);\n    debugger\n    // this.setState(this.state.opisTask);\n    this.dispath({\n      type:'RERENDER_THREE',\n      contextState:this.state.opisTask\n    })\n  }\n\n  componentDidMount() {\n    this.axioTaskList()\n  }\n  render() {\n \n    return (\n      <Table state={this.state} rerenderTask={this.renderArrTask} />\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}