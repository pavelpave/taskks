{"ast":null,"code":"import _objectSpread from \"/home/garpix/task_react_App/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/garpix/task_react_App/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './ui/index';\nimport * as axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.state;\n    this.axioTaskList = this.axioTaskList.bind(this);\n    this.rerenderer = props.rerenderer;\n  }\n\n  axioTaskList() {\n    let mass = [];\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    };\n    axios.get(\"http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/task/\", {\n      headers\n    }).then(res => {\n      this.data = res.data;\n\n      for (let i = 0; i < this.data.results.length; i++) {\n        if (this.data.results[i].owner_object.id === this.state.owner_object.id) {\n          mass.push(this.data.results[i]);\n        }\n      }\n\n      console.log(mass);\n\n      let newState = _objectSpread({}, this.state);\n\n      newState.opisTask = mass;\n      console.log(newState);\n      this.setState(newState);\n    });\n  }\n\n  componentDidMount() {\n    this.axioTaskList();\n  }\n\n  render() {\n    return React.createElement(Table, {\n      state: this.state,\n      rerenderTask: this.axioTaskList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/App.js"],"names":["React","Component","Table","axios","App","constructor","props","state","axioTaskList","bind","rerenderer","mass","headers","get","then","res","data","i","results","length","owner_object","id","push","console","log","newState","opisTask","setState","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkBJ,KAAK,CAACI,UAAxB;AACD;;AACDF,EAAAA,YAAY,GAAG;AAEb,QAAIG,IAAI,GAAG,EAAX;AACA,UAAMC,OAAO,GAAG;AACd,uBAAiB;AADH,KAAhB;AAGAT,IAAAA,KAAK,CAACU,GAAN,qEAA8E;AAAED,MAAAA;AAAF,KAA9E,EACGE,IADH,CACQC,GAAG,IAAI;AACX,WAAKC,IAAL,GAAYD,GAAG,CAACC,IAAhB;;AAIA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKD,IAAL,CAAUE,OAAV,CAAkBC,MAAtC,EAA8CF,CAAC,EAA/C,EAAmD;AAEjD,YAAI,KAAKD,IAAL,CAAUE,OAAV,CAAkBD,CAAlB,EAAqBG,YAArB,CAAkCC,EAAlC,KAAyC,KAAKd,KAAL,CAAWa,YAAX,CAAwBC,EAArE,EAAyE;AACvEV,UAAAA,IAAI,CAACW,IAAL,CAAU,KAAKN,IAAL,CAAUE,OAAV,CAAkBD,CAAlB,CAAV;AACD;AACF;;AACDM,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;;AACA,UAAIc,QAAQ,qBAAO,KAAKlB,KAAZ,CAAZ;;AACAkB,MAAAA,QAAQ,CAACC,QAAT,GAAoBf,IAApB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,WAAKE,QAAL,CAAcF,QAAd;AACD,KAjBH;AAkBD;;AACDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKpB,YAAL;AAGD;;AACDqB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKtB,KAAnB;AAA0B,MAAA,YAAY,EAAE,KAAKC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAzCyB;;AA4C5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from './ui/index'\nimport * as axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = props.state\n    this.axioTaskList = this.axioTaskList.bind(this)\n    this.rerenderer = props.rerenderer\n  }\n  axioTaskList() {\n\n    let mass = []\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    }\n    axios.get(`http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/task/`, { headers })\n      .then(res => {\n        this.data = res.data;\n\n\n\n        for (let i = 0; i < this.data.results.length; i++) {\n\n          if (this.data.results[i].owner_object.id === this.state.owner_object.id) {\n            mass.push(this.data.results[i])\n          }\n        }\n        console.log(mass)\n        let newState = {...this.state};\n        newState.opisTask = mass\n        console.log(newState)\n        this.setState(newState)\n      })\n  }\n  componentDidMount() {\n    this.axioTaskList()\n\n\n  }\n  render() {\n    return (\n      <Table state={this.state} rerenderTask={this.axioTaskList} />\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}