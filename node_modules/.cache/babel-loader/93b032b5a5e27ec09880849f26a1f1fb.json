{"ast":null,"code":"import _objectSpread from \"/home/garpix/task_react_App/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/garpix/task_react_App/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './ui/index';\nimport api from './ui/api_Task/';\nconst apiTodo = api.todo;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.state;\n    this.axioTaskList = this.axioTaskList.bind(this);\n    this.renderArrTask = this.renderArrTask.bind(this);\n    this.rerenderer = props.rerenderer;\n  }\n\n  axioTaskList() {\n    apiTodo.getTasks({}, response => {\n      this.renderArrTask(response.data.results);\n    });\n  }\n\n  renderArrTask(data) {\n    let newstate = _objectSpread({}, this.state);\n\n    let opisTask = newstate.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if (newtask.id === oldtask.id) {\n          console.log(oldtask, 'oldtask');\n          console.log(newtask, 'newtask');\n          return _objectSpread({}, newtask);\n        }\n\n        return oldtask;\n      });\n    });\n    newstate.opisTask = opisTask;\n    console.log(newstate.opisTask);\n    this.setState(newstate.opisTask); // this.shouldComponentUpdate(this.props,newstate)\n  } // shouldComponentUpdate(Nprops,newstate){\n  //   this.setState({\n  //     opisTask:newstate.opisTask\n  //   });\n  // }\n\n\n  componentDidMount() {\n    this.axioTaskList();\n  }\n\n  render() {\n    //  this.axioTaskList()\n    return React.createElement(Table, {\n      state: this.state,\n      rerenderTask: this.renderArrTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/App.js"],"names":["React","Component","Table","api","apiTodo","todo","App","constructor","props","state","axioTaskList","bind","renderArrTask","rerenderer","getTasks","response","data","results","newstate","opisTask","map","newtask","oldtask","id","console","log","setState","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,MAAMC,OAAO,GAAGD,GAAG,CAACE,IAApB;;AACA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAoB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAApB;AACA,SAAKE,UAAL,GAAkBL,KAAK,CAACK,UAAxB;AACD;;AACDH,EAAAA,YAAY,GAAG;AACbN,IAAAA,OAAO,CAACU,QAAR,CAAiB,EAAjB,EAAqBC,QAAQ,IAAI;AAE7B,WAAKH,aAAL,CAAmBG,QAAQ,CAACC,IAAT,CAAcC,OAAjC;AAEL,KAJC;AAMD;;AACDL,EAAAA,aAAa,CAACI,IAAD,EAAM;AACjB,QAAIE,QAAQ,qBAAO,KAAKT,KAAZ,CAAZ;;AACA,QAAIU,QAAQ,GAAGD,QAAQ,CAACC,QAAxB;AACAH,IAAAA,IAAI,CAACI,GAAL,CAASC,OAAO,IAAI;AAClBF,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,GAAT,CAAaE,OAAO,IAAI;AACjC,YAAGD,OAAO,CAACE,EAAR,KAAeD,OAAO,CAACC,EAA1B,EAA8B;AAC5BC,UAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,SAArB;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqB,SAArB;AAEA,mCAAWA,OAAX;AACD;;AACD,eAAOC,OAAP;AACD,OARU,CAAX;AASD,KAVD;AAWAJ,IAAAA,QAAQ,CAACC,QAAT,GAAoBA,QAApB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACC,QAArB;AACA,SAAKO,QAAL,CAAcR,QAAQ,CAACC,QAAvB,EAhBiB,CAiBjB;AAED,GAnCyB,CAoC1B;AACA;AACA;AACA;AACA;;;AACAQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,YAAL;AACD;;AACDkB,EAAAA,MAAM,GAAG;AACP;AACA,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKnB,KAAnB;AAA0B,MAAA,YAAY,EAAE,KAAKG,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAjDyB;;AAoD5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from './ui/index'\n\nimport api from './ui/api_Task/'\nconst apiTodo = api.todo\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = props.state\n    this.axioTaskList = this.axioTaskList.bind(this)\n    this.renderArrTask= this.renderArrTask.bind(this)\n    this.rerenderer = props.rerenderer\n  }\n  axioTaskList() {\n    apiTodo.getTasks({}, response => {\n      \n        this.renderArrTask(response.data.results)\n   \n  })\n    \n  }\n  renderArrTask(data){\n    let newstate = {...this.state};\n    let opisTask = newstate.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if(newtask.id === oldtask.id) {\n          console.log(oldtask, 'oldtask')\n          console.log(newtask, 'newtask')\n        \n          return {...newtask};\n        }\n        return oldtask;\n      })\n    });\n    newstate.opisTask = opisTask;\n    console.log(newstate.opisTask);\n    this.setState(newstate.opisTask);\n    // this.shouldComponentUpdate(this.props,newstate)\n\n  }\n  // shouldComponentUpdate(Nprops,newstate){\n  //   this.setState({\n  //     opisTask:newstate.opisTask\n  //   });\n  // }\n  componentDidMount() {\n    this.axioTaskList()\n  }\n  render() {\n    //  this.axioTaskList()\n    return (\n      <Table state={this.state} rerenderTask={this.renderArrTask} />\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}