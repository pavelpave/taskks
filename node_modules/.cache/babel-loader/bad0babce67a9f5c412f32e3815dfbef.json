{"ast":null,"code":"var _jsxFileName = \"/home/garpix/task_react_App/myapp/src/ui/GroupButton.jsx\";\nimport React, { Component } from 'react';\nimport * as axios from 'axios';\nimport './styles/style.css';\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\n\nclass GroupButton extends Component {\n  constructor(props) {\n    super(props);\n    this.clickBurg = this.clickBurg.bind(this);\n    this.funClickClose = this.funClickClose.bind(this);\n    this.state = props.state;\n    this.el = props.el;\n  }\n\n  clickBurg() {\n    if (this.state.buttonCliked) {\n      this.state.buttonCliked = false;\n    } else {\n      this.state.buttonCliked = true;\n    }\n\n    return this.setState(this.state);\n  }\n\n  funClickClose() {\n    const str = JSON.stringify(this.el.id);\n    const headers = {\n      'Authorization': {\n        token: '6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n      }\n    };\n    axios.post(\"\".concat(urlBase, \"task/\").concat(this.el.id, \"/close/\"), str, headers).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"\\u0412\\u0437\\u044F\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"), React.createElement(\"div\", {\n      className: \"Burger_button\",\n      onClick: this.clickBurg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), this.state.buttonCliked ? React.createElement(\"div\", {\n      className: \"clickedBurger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: this.funClickClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\u041F\\u0435\\u0440\\u0435\\u043E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\")) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"link_task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\u043F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"));\n  }\n\n}\n\nexport default GroupButton;","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/ui/GroupButton.jsx"],"names":["React","Component","axios","urlBase","GroupButton","constructor","props","clickBurg","bind","funClickClose","state","el","buttonCliked","setState","str","JSON","stringify","id","headers","token","post","then","response","console","log","catch","error","render"],"mappings":"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","sourcesContent":["import React , {Component} from 'react'\nimport * as axios  from 'axios';\nimport './styles/style.css'\n\n\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\n\n\n\nclass GroupButton extends Component {\n    constructor(props) {\n        super(props);\n        this.clickBurg = this.clickBurg.bind(this)\n        this.funClickClose = this.funClickClose.bind(this)\n        this.state = props.state\n        this.el = props.el\n    }\n    clickBurg(){\n       if(this.state.buttonCliked){        \n        this.state.buttonCliked = false          \n       }else{\n        this.state.buttonCliked = true       \n       }\n        return this.setState(this.state)\n         \n    }\n   funClickClose(){\n    const str = JSON.stringify(this.el.id);\n    const headers = {\n        'Authorization': {token:'6668b8cfdf927ba7710a9b0890de66c12d0b69fa'}\n    }\n    axios.post(`${urlBase}task/${this.el.id}/close/`,str ,  headers)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n     \n   }\n    render(){\n        return(\n            <div>\n               \n                <button className='btn btn-primary'>Взять задачу</button>\n                 \n                <div className=\"Burger_button\" onClick={this.clickBurg}>\n                   \n                    <span></span>\n                    <span></span>\n                    <span></span>\n                 </div>\n                 {this.state.buttonCliked ? (   <div className='clickedBurger'>\n                        <button type=\"button\" className='btn btn-danger' onClick={this.funClickClose}>Закрыть задачу</button>\n                        <button type=\"button\" className='btn btn-secondary'>Редактировать задачу</button>\n                        <button type=\"button\" className='btn btn-success'>Завершить задачу</button>\n                        <button type=\"button\" className='btn btn-dark'>Переоткрыть задачу</button>\n\n                   </div>  ) : <p></p>}\n                \n                <a href=\"#\" className=\"link_task\">перейти</a>\n            </div>\n        )\n    }\n}\nexport default GroupButton"]},"metadata":{},"sourceType":"module"}