{"ast":null,"code":"//Element object\n//Wrapper around browser methods\nvar __slice = Array.prototype.slice;\n\nvar _ = require(\"lodash\"),\n    utils = require(\"./utils.js\"),\n    niceArgs = utils.niceArgs,\n    niceResp = utils.niceResp,\n    elementCommands = require('./element-commands');\n\nvar Element = function Element(value, browser) {\n  this.value = value;\n  this.browser = browser;\n\n  if (!value) {\n    throw new Error(\"no value passed to Element constructor\");\n  }\n\n  if (!browser) {\n    throw new Error(\"no browser passed to Element constructor\");\n  }\n};\n\nElement.prototype.emit = function () {\n  this.browser.emit.apply(this.browser, __slice.call(arguments, 0));\n};\n\nElement.prototype.toString = function () {\n  return String(this.value);\n};\n\nElement.prototype.toJSON = function () {\n  return {\n    ELEMENT: this.value\n  };\n};\n\n_(elementCommands).each(function (fn, name) {\n  Element.prototype[name] = function () {\n    var _this = this;\n\n    var fargs = utils.varargs(arguments);\n    this.emit('command', \"CALL\", \"element.\" + name + niceArgs(fargs.all));\n\n    var cb = function cb(err) {\n      if (err) {\n        err.message = '[element.' + name + niceArgs(fargs.all) + \"] \" + err.message;\n        fargs.callback(err);\n      } else {\n        var cbArgs = __slice.call(arguments, 0);\n\n        _this.emit('command', \"RESPONSE\", \"element.\" + name + niceArgs(fargs.all), niceResp(_.drop(cbArgs)));\n\n        fargs.callback.apply(null, cbArgs);\n      }\n    };\n\n    var args = fargs.all.concat([cb]);\n    return fn.apply(this, args);\n  };\n});\n\nmodule.exports = Element;","map":null,"metadata":{},"sourceType":"script"}