{"ast":null,"code":"/**\r\n * JSON Format Plugin\r\n *\r\n * @module plugins/json\r\n * @license [MIT]{@link https://github.com/archiverjs/node-archiver/blob/master/LICENSE}\r\n * @copyright (c) 2012-2014 Chris Talkington, contributors.\r\n */\nvar inherits = require('util').inherits;\n\nvar Transform = require('readable-stream').Transform;\n\nvar crc32 = require('buffer-crc32');\n\nvar util = require('archiver-utils');\n/**\r\n * @constructor\r\n * @param {(JsonOptions|TransformOptions)} options\r\n */\n\n\nvar Json = function Json(options) {\n  if (!(this instanceof Json)) {\n    return new Json(options);\n  }\n\n  options = this.options = util.defaults(options, {});\n  Transform.call(this, options);\n  this.supports = {\n    directory: true,\n    symlink: true\n  };\n  this.files = [];\n};\n\ninherits(Json, Transform);\n/**\r\n * [_transform description]\r\n *\r\n * @private\r\n * @param  {Buffer}   chunk\r\n * @param  {String}   encoding\r\n * @param  {Function} callback\r\n * @return void\r\n */\n\nJson.prototype._transform = function (chunk, encoding, callback) {\n  callback(null, chunk);\n};\n/**\r\n * [_writeStringified description]\r\n *\r\n * @private\r\n * @return void\r\n */\n\n\nJson.prototype._writeStringified = function () {\n  var fileString = JSON.stringify(this.files);\n  this.write(fileString);\n};\n/**\r\n * [append description]\r\n *\r\n * @param  {(Buffer|Stream)}   source\r\n * @param  {EntryData}   data\r\n * @param  {Function} callback\r\n * @return void\r\n */\n\n\nJson.prototype.append = function (source, data, callback) {\n  var self = this;\n  data.crc32 = 0;\n\n  function onend(err, sourceBuffer) {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    data.size = sourceBuffer.length || 0;\n    data.crc32 = crc32.unsigned(sourceBuffer);\n    self.files.push(data);\n    callback(null, data);\n  }\n\n  if (data.sourceType === 'buffer') {\n    onend(null, source);\n  } else if (data.sourceType === 'stream') {\n    util.collectStream(source, onend);\n  }\n};\n/**\r\n * [finalize description]\r\n *\r\n * @return void\r\n */\n\n\nJson.prototype.finalize = function () {\n  this._writeStringified();\n\n  this.end();\n};\n\nmodule.exports = Json;\n/**\r\n * @typedef {Object} JsonOptions\r\n * @global\r\n */","map":null,"metadata":{},"sourceType":"script"}