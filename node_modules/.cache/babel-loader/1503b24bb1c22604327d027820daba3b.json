{"ast":null,"code":"import _objectSpread from \"/home/garpix/task_react_App/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/garpix/task_react_App/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './ui/index';\nimport * as axios from 'axios';\nimport state from './state/state'; // import api from './ui/api_Task/todo'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = state;\n    this.axioTaskList = this.axioTaskList.bind(this);\n    this.renderArrTask = this.renderArrTask.bind(this);\n    this.rerenderer = props.rerenderer;\n  }\n\n  axioTaskList() {\n    // const apiTodo = api.todo\n    let mass = [];\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    };\n    axios.get(\"http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/task/\", {\n      headers\n    }).then(res => {\n      let data = res.data;\n      console.log(this.data.results);\n\n      for (let i = 0; i < this.data.results.length; i++) {// if (this.data.results[i].owner_object.id === this.state.owner_object.id) {\n        //   mass.push(this.data.results[i])\n        // }\n        // this.state.buttonCliked[this.data.results[i].id] = null\n      }\n\n      this.state.opisTask = this.data.results;\n      debugger;\n      this.setState(this.state.opisTask);\n    });\n  }\n\n  renderArrTask(data) {\n    let newstate = _objectSpread({}, this.state);\n\n    let opisTask = newstate.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if (newtask.id === oldtask.id) {\n          console.log(newtask, 'newtask');\n          console.log(oldtask, 'oldtask');\n          return _objectSpread({}, newtask);\n        }\n\n        return oldtask;\n      });\n    });\n    newstate.opisTask = opisTask;\n    console.log(newstate.opisTask);\n    this.setState(newstate.opisTask);\n  }\n\n  componentDidMount() {\n    this.axioTaskList();\n  }\n\n  render() {\n    return React.createElement(Table, {\n      state: this.state,\n      rerenderTask: this.renderArrTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/App.js"],"names":["React","Component","Table","axios","state","App","constructor","props","axioTaskList","bind","renderArrTask","rerenderer","mass","headers","get","then","res","data","console","log","results","i","length","opisTask","setState","newstate","map","newtask","oldtask","id","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAoB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAApB;AACA,SAAKE,UAAL,GAAkBJ,KAAK,CAACI,UAAxB;AACD;;AACDH,EAAAA,YAAY,GAAG;AACb;AACA,QAAII,IAAI,GAAG,EAAX;AACA,UAAMC,OAAO,GAAG;AACd,uBAAiB;AADH,KAAhB;AAGAV,IAAAA,KAAK,CAACW,GAAN,qEAA8E;AAAED,MAAAA;AAAF,KAA9E,EACGE,IADH,CACQC,GAAG,IAAI;AACX,UAAIC,IAAI,GAAGD,GAAG,CAACC,IAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,IAAL,CAAUG,OAAtB;;AAGA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,IAAL,CAAUG,OAAV,CAAkBE,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD,CAEjD;AACA;AACA;AACA;AAED;;AAGD,WAAKjB,KAAL,CAAWmB,QAAX,GAAsB,KAAKN,IAAL,CAAUG,OAAhC;AAEF;AACE,WAAKI,QAAL,CAAc,KAAKpB,KAAL,CAAWmB,QAAzB;AACD,KApBH;AAqBD;;AACDb,EAAAA,aAAa,CAACO,IAAD,EAAM;AACjB,QAAIQ,QAAQ,qBAAO,KAAKrB,KAAZ,CAAZ;;AACA,QAAImB,QAAQ,GAAGE,QAAQ,CAACF,QAAxB;AACAN,IAAAA,IAAI,CAACS,GAAL,CAASC,OAAO,IAAI;AAClBJ,MAAAA,QAAQ,GAAGA,QAAQ,CAACG,GAAT,CAAaE,OAAO,IAAI;AACjC,YAAGD,OAAO,CAACE,EAAR,KAAeD,OAAO,CAACC,EAA1B,EAA8B;AAC5BX,UAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ,EAAqB,SAArB;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ,EAAqB,SAArB;AACA,mCAAWD,OAAX;AACD;;AACD,eAAOC,OAAP;AACD,OAPU,CAAX;AAQD,KATD;AAUAH,IAAAA,QAAQ,CAACF,QAAT,GAAoBA,QAApB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACF,QAArB;AACA,SAAKC,QAAL,CAAcC,QAAQ,CAACF,QAAvB;AACD;;AACDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKtB,YAAL;AACD;;AACDuB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAK3B,KAAnB;AAA0B,MAAA,YAAY,EAAE,KAAKM,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA5DyB;;AA+D5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from './ui/index'\nimport * as axios from 'axios';\nimport state from './state/state'\n// import api from './ui/api_Task/todo'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = state\n    this.axioTaskList = this.axioTaskList.bind(this)\n    this.renderArrTask= this.renderArrTask.bind(this)\n    this.rerenderer = props.rerenderer\n  }\n  axioTaskList() {\n    // const apiTodo = api.todo\n    let mass = []\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    }    \n    axios.get(`http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/task/`, { headers })\n      .then(res => {\n        let data = res.data;\n        console.log(this.data.results)\n\n        \n        for (let i = 0; i < this.data.results.length; i++) {\n\n          // if (this.data.results[i].owner_object.id === this.state.owner_object.id) {\n          //   mass.push(this.data.results[i])\n          // }\n          // this.state.buttonCliked[this.data.results[i].id] = null\n          \n        }\n        \n       \n        this.state.opisTask = this.data.results\n        \n      debugger\n        this.setState(this.state.opisTask )\n      })\n  }\n  renderArrTask(data){\n    let newstate = {...this.state};\n    let opisTask = newstate.opisTask;\n    data.map(newtask => {\n      opisTask = opisTask.map(oldtask => {\n        if(newtask.id === oldtask.id) {\n          console.log(newtask, 'newtask')\n          console.log(oldtask, 'oldtask')\n          return {...newtask};\n        }\n        return oldtask;\n      })\n    });\n    newstate.opisTask = opisTask;\n    console.log(newstate.opisTask);\n    this.setState(newstate.opisTask);\n  }\n  componentDidMount() {\n    this.axioTaskList()\n  }\n  render() {\n    return (\n      <Table state={this.state} rerenderTask={this.renderArrTask} />\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}