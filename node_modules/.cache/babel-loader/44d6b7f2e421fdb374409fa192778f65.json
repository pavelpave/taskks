{"ast":null,"code":"import * as axios from 'axios';\nimport React, { Component } from 'react'; // import state from '../state/state'\n\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\nexport default class axioPost extends Component {\n  constructor(el, urlProps, state) {\n    super(el, urlProps, state);\n    this.state = state;\n    this.el = el;\n    this.urlProps = urlProps;\n    this.axioRequests = this.axioRequests.bind(this);\n  }\n\n  axioRequests() {\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    };\n    axios.post(\"\".concat(urlBase, \"task/\").concat(this.el).concat(this.urlProps), {}, {\n      headers\n    }).then(response => {\n      console.log(response.data);\n      this.state.opisTask.map((el, i) => {\n        for (let j = 0; j < response.data.length; j++) {\n          debugger;\n\n          if (el.id === response.data[j].id) {\n            el = response.data[j];\n          }\n        }\n\n        console.log(this.state);\n      });\n      this.setState(this.state);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null);\n  }\n\n}","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/ui/axioButton.js"],"names":["axios","React","Component","urlBase","axioPost","constructor","el","urlProps","state","axioRequests","bind","headers","post","then","response","console","log","data","opisTask","map","i","j","length","id","setState","catch","error","render"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAwB,OAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC,C,CACA;;AACA,MAAMC,OAAO,GAAG,6DAAhB;AAGA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;AAC3CG,EAAAA,WAAW,CAACC,EAAD,EAAMC,QAAN,EAAiBC,KAAjB,EAAwB;AACjC,UAAMF,EAAN,EAAWC,QAAX,EAAsBC,KAAtB;AACC,SAAKA,KAAL,GAAaA,KAAb;AACC,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDD,EAAAA,YAAY,GAAE;AAEV,UAAME,OAAO,GAAG;AACZ,uBAAiB;AADL,KAAhB;AAGAX,IAAAA,KAAK,CAACY,IAAN,WAAcT,OAAd,kBAA6B,KAAKG,EAAlC,SAAuC,KAAKC,QAA5C,GAAwD,EAAxD,EAA4D;AAACI,MAAAA;AAAD,KAA5D,EACGE,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACC,WAAKT,KAAL,CAAWU,QAAX,CAAoBC,GAApB,CAAwB,CAACb,EAAD,EAAIc,CAAJ,KAAS;AAC/B,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACG,IAAT,CAAcK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C;;AACD,cAAGf,EAAE,CAACiB,EAAH,KAAUT,QAAQ,CAACG,IAAT,CAAcI,CAAd,EAAiBE,EAA9B,EAAiC;AAC/BjB,YAAAA,EAAE,GAAGQ,QAAQ,CAACG,IAAT,CAAcI,CAAd,CAAL;AACD;AAED;;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAa,KAAKR,KAAlB;AAEF,OAVD;AAWN,WAAKgB,QAAL,CAAc,KAAKhB,KAAnB;AACI,KAfH,EAgBGiB,KAhBH,CAgBUC,KAAD,IAAW;AAChBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACD,KAlBH;AAmBH;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE,yCADF;AAID;;AAvC0C","sourcesContent":["import * as axios  from 'axios';\nimport React , {Component} from 'react'\n// import state from '../state/state'\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\n\n\nexport default class axioPost extends Component{\n    constructor(el , urlProps , state) {\n      super(el , urlProps , state)\n       this.state = state\n        this.el = el\n        this.urlProps = urlProps\n        this.axioRequests = this.axioRequests.bind(this)\n    }\n    axioRequests(){\n       \n        const headers = {\n            'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n        }\n        axios.post(`${urlBase}task/${this.el}${this.urlProps}`, {}, {headers})\n          .then((response) => {\n            console.log(response.data)\n             this.state.opisTask.map((el,i) =>{\n               for (let j = 0; j < response.data.length; j++) {\n                 debugger\n                if(el.id === response.data[j].id){\n                  el = response.data[j]\n                }      \n\n               }\n                console.log( this.state);\n              \n             })\n       this.setState(this.state)\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n    }\n    \n    render(){\n      return(\n        <>\n        </>\n      )\n    }\n}"]},"metadata":{},"sourceType":"module"}