{"ast":null,"code":"import _objectSpread from \"/home/garpix/task_react_App/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/garpix/task_react_App/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Table from './ui/index';\nimport * as axios from 'axios'; // import api from './ui/api_Task/todo'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = props.state;\n    this.axioTaskList = this.axioTaskList.bind(this);\n    this.rerenderer = props.rerenderer;\n  }\n\n  axioTaskList() {\n    // const apiTodo = api.todo\n    let mass = [];\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    };\n    axios.get(\"http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/task/\", {\n      headers\n    }).then(res => {\n      this.data = res.data;\n      console.log(this.data.results);\n\n      for (let i = 0; i < this.data.results.length; i++) {\n        if (this.data.results[i].owner_object.id === this.state.owner_object.id) {\n          mass.push(this.data.results[i]);\n        }\n\n        this.state.buttonCliked[this.data.results[i].id] = null;\n      }\n\n      this.state.opisTask = this.data.results;\n      this.setState(this.state.opisTask);\n    });\n  }\n\n  renderArrTask(response) {\n    let newstate = _objectSpread({}, this.state);\n\n    console.log(response.data);\n    response.data.map(newtask => {\n      debugger;\n      newstate.opisTask.map(oldtask => {\n        if (newtask.id === oldtask.id) {\n          return this.setState(newstate);\n        } // return oldtask\n\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.axioTaskList();\n  }\n\n  render() {\n    return React.createElement(Table, {\n      state: this.state,\n      rerenderTask: this.axioTaskList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/App.js"],"names":["React","Component","Table","axios","App","constructor","props","state","axioTaskList","bind","rerenderer","mass","headers","get","then","res","data","console","log","results","i","length","owner_object","id","push","buttonCliked","opisTask","setState","renderArrTask","response","newstate","map","newtask","oldtask","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkBJ,KAAK,CAACI,UAAxB;AACD;;AACDF,EAAAA,YAAY,GAAG;AACb;AACA,QAAIG,IAAI,GAAG,EAAX;AACA,UAAMC,OAAO,GAAG;AACd,uBAAiB;AADH,KAAhB;AAGAT,IAAAA,KAAK,CAACU,GAAN,qEAA8E;AAAED,MAAAA;AAAF,KAA9E,EACGE,IADH,CACQC,GAAG,IAAI;AACX,WAAKC,IAAL,GAAYD,GAAG,CAACC,IAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,IAAL,CAAUG,OAAtB;;AAGA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,IAAL,CAAUG,OAAV,CAAkBE,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAEjD,YAAI,KAAKJ,IAAL,CAAUG,OAAV,CAAkBC,CAAlB,EAAqBE,YAArB,CAAkCC,EAAlC,KAAyC,KAAKhB,KAAL,CAAWe,YAAX,CAAwBC,EAArE,EAAyE;AACvEZ,UAAAA,IAAI,CAACa,IAAL,CAAU,KAAKR,IAAL,CAAUG,OAAV,CAAkBC,CAAlB,CAAV;AACD;;AACD,aAAKb,KAAL,CAAWkB,YAAX,CAAwB,KAAKT,IAAL,CAAUG,OAAV,CAAkBC,CAAlB,EAAqBG,EAA7C,IAAmD,IAAnD;AACD;;AAGD,WAAKhB,KAAL,CAAWmB,QAAX,GAAsB,KAAKV,IAAL,CAAUG,OAAhC;AAGA,WAAKQ,QAAL,CAAc,KAAKpB,KAAL,CAAWmB,QAAzB;AACD,KAnBH;AAoBD;;AACDE,EAAAA,aAAa,CAACC,QAAD,EAAU;AACrB,QAAIC,QAAQ,qBAAO,KAAKvB,KAAZ,CAAZ;;AAEAU,IAAAA,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACb,IAArB;AAEAa,IAAAA,QAAQ,CAACb,IAAT,CAAce,GAAd,CAAkBC,OAAO,IAAI;AACxB;AACHF,MAAAA,QAAQ,CAACJ,QAAT,CAAkBK,GAAlB,CAAsBE,OAAO,IAAI;AAE/B,YAAGD,OAAO,CAACT,EAAR,KAAeU,OAAO,CAACV,EAA1B,EAA8B;AAE5B,iBAAS,KAAKI,QAAL,CAAcG,QAAd,CAAT;AACD,SAL8B,CAM/B;;AACD,OAPD;AAQD,KAVD;AAWD;;AACDI,EAAAA,iBAAiB,GAAG;AAClB,SAAK1B,YAAL;AAGD;;AACD2B,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAK5B,KAAnB;AAA0B,MAAA,YAAY,EAAE,KAAKC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA5DyB;;AA+D5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Table from './ui/index'\nimport * as axios from 'axios';\n// import api from './ui/api_Task/todo'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = props.state\n    this.axioTaskList = this.axioTaskList.bind(this)\n    this.rerenderer = props.rerenderer\n  }\n  axioTaskList() {\n    // const apiTodo = api.todo\n    let mass = []\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    }    \n    axios.get(`http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/task/`, { headers })\n      .then(res => {\n        this.data = res.data;\n        console.log(this.data.results)\n\n\n        for (let i = 0; i < this.data.results.length; i++) {\n\n          if (this.data.results[i].owner_object.id === this.state.owner_object.id) {\n            mass.push(this.data.results[i])\n          }\n          this.state.buttonCliked[this.data.results[i].id] = null\n        }\n        \n       \n        this.state.opisTask = this.data.results\n        \n      \n        this.setState(this.state.opisTask )\n      })\n  }\n  renderArrTask(response){\n    let newstate = {...this.state};\n\n    console.log(response.data)\n\n    response.data.map(newtask => {\n         debugger\n      newstate.opisTask.map(oldtask => {\n          \n        if(newtask.id === oldtask.id) {\n            \n          return   this.setState(newstate);\n        }\n        // return oldtask\n      })\n    });\n  }\n  componentDidMount() {\n    this.axioTaskList()\n\n\n  }\n  render() {\n    return (\n      <Table state={this.state} rerenderTask={this.axioTaskList} />\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}