{"ast":null,"code":"import * as axios from 'axios';\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\nexport default class axioPost {\n  constructor(el, urlProps) {\n    this.el = el;\n    this.urlProps = urlProps;\n  }\n\n  axioRequests() {\n    const headers = {\n      'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n    };\n    axios.post(\"\".concat(urlBase, \"task/\").concat(this.el).concat(this.urlProps), {}, {\n      headers\n    }).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/garpix/task_react_App/myapp/src/ui/axioButton.js"],"names":["axios","urlBase","axioPost","constructor","el","urlProps","axioRequests","headers","post","then","response","console","log","data","catch","error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAwB,OAAxB;AAEA,MAAMC,OAAO,GAAG,6DAAhB;AAGA,eAAe,MAAMC,QAAN,CAAc;AACzBC,EAAAA,WAAW,CAACC,EAAD,EAAMC,QAAN,EAAgB;AAEvB,SAAKD,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACDC,EAAAA,YAAY,GAAE;AAEV,UAAMC,OAAO,GAAG;AACZ,uBAAiB;AADL,KAAhB;AAGAP,IAAAA,KAAK,CAACQ,IAAN,WAAcP,OAAd,kBAA6B,KAAKG,EAAlC,SAAuC,KAAKC,QAA5C,GAAwD,EAAxD,EAA4D;AAACE,MAAAA;AAAD,KAA5D,EACGE,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAED,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KAPH;AAQH;;AAnBwB","sourcesContent":["import * as axios  from 'axios';\n\nconst urlBase = 'http://garpixcms.staging.garpix.com/garpix_workflow/api/v1/';\n\n\nexport default class axioPost{\n    constructor(el , urlProps) {\n       \n        this.el = el\n        this.urlProps = urlProps\n    }\n    axioRequests(){\n       \n        const headers = {\n            'Authorization': 'Token 6668b8cfdf927ba7710a9b0890de66c12d0b69fa'\n        }\n        axios.post(`${urlBase}task/${this.el}${this.urlProps}`, {}, {headers})\n          .then((response) => {\n            console.log(response.data)\n\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}